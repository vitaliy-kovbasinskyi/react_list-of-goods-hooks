{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","isReversed","setIsReversed","sortType","setSortType","newGoodsFromServer","goods","visibleGoods","sort","f1","f2","localeCompare","length","reverse","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"uOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAkCK,IAAMC,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAS,QAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAnCR,SACEC,EACAH,EACAF,GAEA,IAAIM,EAAY,YAAOD,GAEvB,OAAQH,GACN,IAAK,OACHI,EAAeA,EAAaC,MAC1B,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAE/B,MAEF,IAAK,SACHH,EAAeA,EAAaC,MAC1B,SAACC,EAAIC,GAAL,OAAYD,EAAGG,OAASF,EAAGE,UAYjC,OAJmB,IAAfX,GACFM,EAAaM,UAGRN,EAOoBO,CACzBhB,EACAK,EACAF,GAGF,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,0BACVE,QAAS,WACPb,EAAY,SAJhB,iCAUA,wBACEY,KAAK,SACLD,UAAU,6BACVE,QAAS,WACPb,EAAY,WAJhB,4BAUA,wBACEY,KAAK,SACLD,UAAU,6BACVE,QAAS,WACPf,GAAc,IAJlB,sBAUe,SAAbC,IAAsC,IAAfF,IACvB,wBACEe,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPf,GAAc,GACdE,EAAY,SALhB,sBAaJ,oBAAIW,UAAU,QAAd,SACGV,EAAmBa,KAAI,SAAAC,GAAI,OAC1B,oBAEEJ,UAAU,cACV,UAAQ,OAHV,SAKGI,GAJIA,YCzGjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d9ed32a6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: string,\n  isReversed: boolean,\n) {\n  let visibleGoods = [...goods];\n\n  switch (sortType) {\n    case 'name':\n      visibleGoods = visibleGoods.sort(\n        (f1, f2) => f1.localeCompare(f2),\n      );\n      break;\n\n    case 'length':\n      visibleGoods = visibleGoods.sort(\n        (f1, f2) => f1.length - f2.length,\n      );\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed === true) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState('none');\n\n  const newGoodsFromServer = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className=\"button is-info is-light\"\n          onClick={() => {\n            setSortType('name');\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-success is-light\"\n          onClick={() => {\n            setSortType('length');\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-warning is-light\"\n          onClick={() => {\n            setIsReversed(true);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== 'none' || isReversed === true) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setIsReversed(false);\n              setSortType('none');\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul className=\"Goods\">\n        {newGoodsFromServer.map(good => (\n          <li\n            key={good}\n            className=\"Goods__item\"\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}